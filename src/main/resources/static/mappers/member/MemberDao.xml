<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.party.member.MemberDao">

    <select id="getMembers" parameterType="MemberVo" resultType="MemberVo">
        select /* MemberDao.getMembers */
               member_idx      as member_idx
             , member_id       as member_id
             , member_password as member_password
             , member_name     as member_name
          from member_info
         where 1=1
        <if test='memberId != null and memberId !="" '>
           and member_id   like concat('%',#{memberId},'%')
        </if>
        <if test='memberName != null and memberName !="" '>
           and member_name like concat('%',#{memberName},'%')
        </if>
        limit #{limit} offset #{offset}
    </select>

    <select id="getMembersTotCnt" parameterType="MemberVo" resultType="int">
        select /* MemberDao.getMembersTotCnt */
               count(*) as tot_cnt
          from member_info
         where 1=1
        <if test='memberId != null and memberId !="" '>
           and member_id   like concat('%',#{memberId},'%')
        </if>
        <if test='memberName != null and memberName !="" '>
           and member_name like concat('%',#{memberName},'%')
        </if>
    </select>

    <select id="getMember" parameterType="MemberVo" resultType="MemberVo">
        select /* MemberDao.getMember */
               member_idx      as member_idx
             , member_id       as member_id
             , member_password as member_password
             , member_name     as member_name
          from member_info
         where member_idx = #{memberIdx}
    </select>

    <select id="getMemberByMemberId" parameterType="MemberVo" resultType="MemberVo">
        select /* MemberDao.getMemberByMemberId */
               member_idx      as member_idx
             , member_id       as member_id
             , member_password as member_password
             , member_name     as member_name
          from member_info
         where member_id = #{memberId}
    </select>

    <insert id="createMember" parameterType="MemberVo" useGeneratedKeys="true" keyProperty="memberIdx">
        insert /* MemberDao.createMember */
          into member_info (
               member_id
             , member_password
             , member_name
        ) values (
               #{memberId}
             , #{memberPassword}
             , #{memberName}
        )
    </insert>

    <update id="updateMember" parameterType="MemberVo">
        update /* MemberDao.updateMember */
               member_info
           set member_name = #{memberName}
         where member_idx  = #{memberIdx}
    </update>

    <delete id="deleteMember" parameterType="MemberVo">
        delete /* MemberDao.deleteMember */
          from member_info
         where member_idx  = #{memberIdx}
    </delete>

    <select id="getMemberAllergyVos" parameterType="MemberAllergyVo" resultType="MemberAllergyVo">
        select /* MemberDao.getMemberAllergyVos */
               m.member_allergy_idx as member_allergy_idx
             , m.member_idx         as member_idx
             , m.allergy_idx        as allergy_idx
             , d1.allergy_nm        as allergy_nm
          from            member_allergy  m
               inner join cm_allergy     d1 on m.allergy_idx = d1.allergy_idx
         where m.member_idx = #{memberIdx}
    </select>

    <select id="getMemberHateFoodVos" parameterType="MemberHateFoodVo" resultType="MemberHateFoodVo">
        select /* MemberDao.getMemberHateFoodVos */
               m.member_hate_food_idx as member_hate_food_idx
             , m.member_idx           as member_idx
             , m.food_idx             as food_idx
             , d1.food_nm             as food_nm
          from            member_hate_food  m
               inner join cm_food          d1 on m.food_idx = d1.food_idx
         where m.member_idx = #{memberIdx}
    </select>

    <select id="getMemberLikeFoodVos" parameterType="MemberLikeFoodVo" resultType="MemberLikeFoodVo">
        select /* MemberDao.getMemberLikeFoodVos */
               m.member_like_food_idx as member_like_food_idx
             , m.member_idx           as member_idx
             , m.food_idx             as food_idx
             , d1.food_nm             as food_nm
          from            member_like_food  m
               inner join cm_food          d1 on m.food_idx = d1.food_idx
         where m.member_idx = #{memberIdx}
    </select>

    <insert id="createMemberAllergyVo" parameterType="MemberAllergyVo">
        insert /* MemberDao.createMemberAllergyVo */
          into member_allergy (
               member_idx
             , allergy_idx
        ) values (
               #{memberIdx}
             , #{allergyIdx}
        )
    </insert>

    <insert id="createMemberHateFoodVo" parameterType="MemberHateFoodVo">
        insert /* MemberDao.createMemberHateFoodVo */
          into member_hate_food (
               member_idx
             , food_idx
        ) values (
               #{memberIdx}
             , #{foodIdx}
        )
    </insert>

    <insert id="createMemberLikeFoodVo" parameterType="MemberLikeFoodVo">
        insert /* MemberDao.createMemberLikeFoodVo */
          into member_like_food (
               member_idx
             , food_idx
        ) values (
               #{memberIdx}
             , #{foodIdx}
        )
    </insert>

    <delete id="deleteMemberAllergyVo" parameterType="MemberAllergyVo">
        delete /* MemberDao.deleteMemberAllergyVo */
          from member_allergy
         where member_idx = #{memberIdx}
    </delete>

    <delete id="deleteMemberHateFoodVo" parameterType="MemberHateFoodVo">
        delete /* MemberDao.deleteMemberHateFoodVo */
          from member_hate_food
         where member_idx = #{memberIdx}
    </delete>

    <delete id="deleteMemberLikeFoodVo" parameterType="MemberLikeFoodVo">
        delete /* MemberDao.deleteMemberLikeFoodVo */
          from member_like_food
         where member_idx = #{memberIdx}
    </delete>

</mapper>
